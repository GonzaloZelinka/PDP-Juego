Object subclass: #Ficha	instanceVariableNames: 'estado'	classVariableNames: ''	poolDictionaries: ''	category: 'Senku7'!!Ficha commentStamp: 'GRUPO5 10/28/2021 10:27' prior: 0!Esta clase se encarga de todo lo relacionado con la fichas de cada tablero. 
Sus funciones son: cambiar el estado de la ficha (0 y 1). 
!!Ficha methodsFor: 'all' stamp: 'GRUPO5 10/28/2021 10:43'!colocar_ficha
	"cambia el estado de una ficha a lleno"
	self estado: 1.! !!Ficha methodsFor: 'all' stamp: 'GRUPO5 10/28/2021 10:43'!eliminar_ficha
	"cambia el estado de una ficha a vacio"
	self estado: 0.! !!Ficha methodsFor: 'acccessing' stamp: 'GRUPO5 10/28/2021 09:16'!estado: unEstado
	"setter del estado"
	estado:= unEstado.! !!Ficha methodsFor: 'acccessing' stamp: 'GRUPO5 10/28/2021 09:17'!estado
	"getter del estado"
	^estado! !PackageManifest subclass: #ManifestSenku	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Senku7'!!ManifestSenku commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestSenku class	instanceVariableNames: ''!!ManifestSenku class methodsFor: 'code-critics' stamp: 'Anonymous 10/30/2021 02:16'!ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #mostrarTablero #false)) #'2021-10-28T10:20:32.259728-03:00') #(#(#RGClassDefinition #(#Tablero)) #'2021-10-28T10:20:46.921728-03:00') #(#(#RGPackage #(#Senku)) #'2021-10-30T02:16:12.211556-03:00') )! !!ManifestSenku class methodsFor: 'code-critics' stamp: 'GRUPO5 10/28/2021 11:26'!ruleRBExcessiveArgumentsRuleV1FalsePositive
	^ #(#(#(#RGClassDefinition #(#Tablero)) #'2021-10-28T11:26:01.787728-03:00') )! !!ManifestSenku class methodsFor: 'code-critics' stamp: 'GRUPO5 10/28/2021 10:20'!ruleRBLongMethodsRuleV1FalsePositive
	^ #(#(#(#RGClassDefinition #(#Tablero)) #'2021-10-28T10:20:50.152728-03:00') )! !Object subclass: #Senku	instanceVariableNames: 'tipoTablero'	classVariableNames: ''	poolDictionaries: ''	category: 'Senku7'!!Senku methodsFor: 'accesing' stamp: 'Anonymous 10/29/2021 20:48'!tipoTablero	"acceso a la variable de tipoTablero"	^tipoTablero ! !!Senku methodsFor: 'accesing' stamp: 'Anonymous 10/29/2021 20:49'!tipoTablero: argumento	"acceso a la variable de tipoTablero"	^tipoTablero:= argumento .! !!Senku methodsFor: 'selection' stamp: 'Anonymous 10/30/2021 17:19'!elegirTablero	"Despliega menu de elección de tablero"	self tipoTablero: (UIManager default chooseFrom: #('TABLERO CUADRADO 7x7' 'TABLERO CRUZ' 'TABLERO DIAMANTE') values:#(1 2 3 4 ) lines: #(1 2 3 4) title: #('ELIJA EL TIPO DE TABLERO EN EL QUE DESEA JUGAR')).	tipoTablero ifNil: [ self elegirTablero  ].	^tipoTablero! !!Senku methodsFor: 'initialization' stamp: 'Anonymous 10/29/2021 20:51'!initialize	"inicializa el tipoTablero en 1"	super initialize.	tipoTablero:=1.! !Array2D subclass: #Tablero	instanceVariableNames: 'cant_fichas tiempo puntaje'	classVariableNames: ''	poolDictionaries: ''	category: 'Senku7'!!Tablero commentStamp: 'GRUPO5 10/28/2021 10:29' prior: 0!Esta subclase se encarga del tablero de juego, donde se encuentran el conjunto de fichas que se pueden ir moviendo.
Sus funciones son: cargar el tablero, mostrarlo y realizar los movimientos de las fichas. !!Tablero methodsFor: 'testing' stamp: 'Anonymous 10/30/2021 18:39'!verificarFinJuego
	"metodo que se encarga de finalizar el juego"	(cant_fichas = 1) 	ifTrue: [UIManager default alert: '¡FELICIDADES, HAS GANADO!!!!Puntaje: ',(self puntajeFinal) asString title: 'FIN DEL JUEGO'. 				^true]	ifFalse:[ 1 to:7 do:[:i| 					1 to:7 do:[ :j|						1 to:4 do:[ :d| (self verificarVecino: d i: i j: j) ifTrue:[ ^false ].									 ].								  ].								].				].	UIManager default alert: 'HAS PERDIDOPuntaje: ',(self puntajeFinal) asString title: 'FIN DEL JUEGO'.	^true
	
	
	
	! !!Tablero methodsFor: 'testing' stamp: 'Anonymous 10/30/2021 17:57'!verificarSalto: direccion i: i j: j     "verifica si un salto es válido en base a la direccion y la posicion actual"    |pos_validas|    pos_validas:=#(1 2 3 4 5 6 7).    ((pos_validas includes: i) and: (pos_validas includes: j)) 		ifTrue:[    		(self at: i at: j) estado = '◙' 				ifTrue:[					(direccion=1) 		"Derecha"     	   				ifTrue:[ ((pos_validas includes: j+1) and: (pos_validas includes:j+2)) 											ifTrue:[												((self at: i at:j+1) estado='◙' and: ((self at: i at:j+2) estado='o')) 															ifTrue:[ ^true ]															ifFalse: [self mensajeMovInvalido.														    		  ^false ].]											ifFalse:[self mensajeMovInvalido.														^false].].				    			(direccion=2) 		"Izquierda"						ifTrue:[ ((pos_validas includes: j-1) and: (pos_validas includes:j-2)) 											ifTrue:[												((self at: i at:j-1) estado='◙' and: ((self at: i at:j-2) estado='o')) 															ifTrue:[ ^true ]															ifFalse: [ self mensajeMovInvalido.																		  ^false ].]											ifFalse:[self mensajeMovInvalido.														^false].].							(direccion=3) 		"Arriba"							ifTrue:[ ((pos_validas includes: i-1) and: (pos_validas includes:i-2)) 											ifTrue:[												((self at: i-1 at:j) estado='◙' and: ((self at: i-2 at:j) estado='o')) 															ifTrue:[ ^true ]															ifFalse: [ self mensajeMovInvalido.																		  ^false ].]											ifFalse:[self mensajeMovInvalido.														^false].].									(direccion=4) 		"Abajo"							ifTrue:[ ((pos_validas includes: i+1) and: (pos_validas includes:i+2)) 											ifTrue:[												((self at: i+1 at:j) estado='◙' and: ((self at: i+2 at:j) estado='o')) 															ifTrue:[ ^true ]															ifFalse: [ self mensajeMovInvalido.																		  ^false ].]											ifFalse:[self mensajeMovInvalido.														^false].].]						ifFalse: [(self at: i at: j) estado = 'o'				ifTrue: [ UIManager default alert: 'LA POSICION SELECCIONADA YA ESTA VACIA' title: 'ERROR'.							^false]				ifFalse:[ UIManager default alert: 'LA POSICION SELECCIONADA ES INVALIDA' title: 'ERROR'.							^false]]]		ifFalse: [ 				(self at: i at: j) estado = 'o'				ifTrue: [ UIManager default alert: 'LA POSICION SELECCIONADA YA ESTA VACIA' title: 'ERROR'.							^false]				ifFalse:[ UIManager default alert: 'LA POSICION SELECCIONADA ES INVALIDA' title: 'ERROR'.							^false].].! !!Tablero methodsFor: 'testing' stamp: 'Anonymous 10/30/2021 17:57'!verificarVecino: direccion i: i j: j     "verifica si un salto es válido sin emitir mensajes en base a la direccion y la posicion actual"    |pos_validas|    pos_validas:=#(1 2 3 4 5 6 7).    ((pos_validas includes: i) and: (pos_validas includes: j)) 		ifTrue:[    		(self at: i at: j) estado = '◙' 				ifTrue:[					(direccion=1) 		"Derecha"     	   				ifTrue:[ ((pos_validas includes: j+1) and: (pos_validas includes:j+2)) 											ifTrue:[												((self at: i at:j+1) estado='◙' and: ((self at: i at:j+2) estado='o')) 															ifTrue:[ ^true ]															ifFalse: [ ^false ].]											ifFalse:[^false].].				    			(direccion=2) 		"Izquierda"						ifTrue:[ ((pos_validas includes: j-1) and: (pos_validas includes:j-2)) 											ifTrue:[												((self at: i at:j-1) estado='◙' and: ((self at: i at:j-2) estado='o')) 															ifTrue:[ ^true ]															ifFalse: [^false ].]											ifFalse:[^false].].					(direccion=3) 		"Arriba"						ifTrue:[ ((pos_validas includes: i-1) and: (pos_validas includes:i-2)) 										ifTrue:[											((self at: i-1 at:j) estado='◙' and: ((self at: i-2 at:j) estado='o')) 														ifTrue:[ ^true ]														ifFalse: [ ^false ].]										ifFalse:[^false].].					(direccion=4) 		"Abajo"							ifTrue:[ ((pos_validas includes: i+1) and: (pos_validas includes:i+2)) 											ifTrue:[												((self at: i+1 at:j) estado='◙' and: ((self at: i+2 at:j) estado='o')) 															ifTrue:[ ^true ]															ifFalse: [ ^false ].]											ifFalse:[ ^false].].]						ifFalse: [(self at: i at: j) estado = 'o'				ifTrue: [ ^false]				ifFalse:[ ^false]]]		ifFalse: [ 				(self at: i at: j) estado = 'o'				ifTrue: [ ^false]				ifFalse:[ ^false].].! !!Tablero methodsFor: 'accessing' stamp: 'Anonymous 10/30/2021 18:02'!puntaje	^ puntaje! !!Tablero methodsFor: 'accessing' stamp: 'Anonymous 10/30/2021 18:02'!tiempo: anObject	tiempo := anObject! !!Tablero methodsFor: 'accessing' stamp: 'GRUPO5 10/28/2021 09:27'!cant_fichas
	"modifica la cantidad de fichas"
	^cant_fichas.! !!Tablero methodsFor: 'accessing' stamp: 'Anonymous 10/30/2021 18:02'!puntaje: anObject	puntaje := anObject! !!Tablero methodsFor: 'accessing' stamp: 'GRUPO5 10/28/2021 09:27'!cant_fichas: unValor
	"modifica la cantidad de fichas"
	cant_fichas:= unValor.! !!Tablero methodsFor: 'accessing' stamp: 'Anonymous 10/30/2021 18:02'!tiempo	^ tiempo! !!Tablero methodsFor: 'moves' stamp: 'Anonymous 10/30/2021 16:09'!saltar: direccion atI: i atJ: j
	"cambia el estado de la ficha actual y el de la ficha (m n)"	|m n|
   (self at:i at:j) estado: 'o'.
	(direccion = 1)ifTrue: [ (self at: i at: j+1) estado: 'o'.									m:=i.									n:= j+2].
	(direccion = 2)ifTrue: [ (self at: i at: j-1) estado: 'o'.									m:=i.									n:= j-2].
	(direccion = 3)ifTrue: [ (self at: i-1 at: j) estado: 'o'.									m:=i-2.									n:= j].
	(direccion = 4)ifTrue: [ (self at: i+1 at: j) estado: 'o'.									m:=i+2.									n:= j].
   (self at: m at: n) estado: '◙'.
   self cant_fichas: (cant_fichas  - 1).! !!Tablero methodsFor: 'printing' stamp: 'Anonymous 10/30/2021 12:53'!mostrarTablero "metodo que muestra el tablero"	^self subclassResponsibility ! !!Tablero methodsFor: 'printing' stamp: 'Anonymous 10/28/2021 18:25'!mensajeMovInvalido	"Mensaje por movimiento invalido"	UIManager default alert: 'EL MOVIMIENTO ES INVALIDO' title: 'ERROR'	! !!Tablero methodsFor: 'calculating' stamp: 'Anonymous 10/30/2021 18:11'!puntajeInicial: unaCantDeFichas	"determina el puntaje inicial del usuario"	self tiempo: (Time now hour) * 60 + (Time now minute). 	self puntaje: unaCantDeFichas.! !!Tablero methodsFor: 'calculating' stamp: 'Anonymous 10/30/2021 18:04'!puntajeFinal	"determina el puntaje final del usuario"		self tiempo: (Time now hour) * 60 + (Time now minute) - tiempo. 	self puntaje: ((puntaje - self cant_fichas) * 5) + ((-1) * tiempo).	^self puntaje. ! !!Tablero methodsFor: 'selection' stamp: 'GRUPO5 10/28/2021 12:10'!seleccionDireccion
	"Seleccionar la direccion que se debe mover la ficha"
	|direccion|
	direccion:=UIManager default
    	chooseFrom: #('MOVER A DERECHA' 'MOVER A IZQUIERDA' 'MOVER A ARRIBA' 'MOVER A ABAJO')
    	values: #(1 2 3 4)
    	lines: #(1 2 3 4)
    	title: 'SELECCIONE DIRECCIÓN'.
	^direccion! !!Tablero methodsFor: 'selection' stamp: 'GRUPO5 10/28/2021 12:10'!seleccionColumna
	"Seleccionar la columna que se debe mover la ficha"
	|columna|
	columna:=UIManager default
   		chooseFrom: #(A B C D E F G H I J K)
    	values: #(1 2 3 4 5 6 7 8 9 10 11)
    	lines: #(1 2 3 4 5 6 7 8 9 10 11)
    	title: 'SELECCIONE COLUMNA'.
	^columna! !!Tablero methodsFor: 'selection' stamp: 'GRUPO5 10/28/2021 12:08'!seleccionFila
	"Seleccionar la fila que se debe mover la ficha"
	|fila|
	fila:=UIManager default
   		chooseFrom: #(A B C D E F G H I J K)
    	values: #(1 2 3 4 5 6 7 8 9 10 11)
    	lines: #(1 2 3 4 5 6 7 8 9 10 11)
    	title: 'SELECCIONE FILA'.
	^fila! !!Tablero methodsFor: 'loading' stamp: 'Anonymous 10/30/2021 12:52'!cargaTablero
	"metodo que carga el tablero"	^self subclassResponsibility 	
	
	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tablero class	instanceVariableNames: ''!!Tablero class methodsFor: 'creating' stamp: 'Anonymous 10/30/2021 18:10'!nuevo: tipo_tab tamaño: tamaño	"Instancia la clase de Tablero segun el tipo seleccionado"	(tipo_tab = 1) ifTrue:[ ^TableroCuadrado new:tamaño ]. 	(tipo_tab = 2) ifTrue:[ ^TableroCruz new:tamaño ]. 	(tipo_tab = 3) ifTrue:[ ^TableroDiamante new:tamaño ].! !Tablero subclass: #TableroCruz	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Senku7'!!TableroCruz methodsFor: 'printing' stamp: 'Anonymous 10/30/2021 17:27'!mostrarTablero"metodo que muestra el tablero cruz"	|letras|	Transcript clear.	letras:=('ABCDEFG').	Transcript cr.	Transcript show: ('       A   B   C   D   E   F   G   ').	Transcript cr.	Transcript cr.	Transcript show: ('             ┌───┬───┬───┐ ').	Transcript cr.	1 to:2 do:[:i | Transcript show:' '.                   Transcript show: (letras at:i).  						 Transcript show:'           │'.						 3 to:5 do:[:j| Transcript show:' '.                                   Transcript show: (self at:i at:j) estado.                                   Transcript show:' │'].                   Transcript cr.						i<2 ifTrue:[  Transcript show: ('             ├───┼───┼───┤ ')]							 ifFalse:[ Transcript show: ('     ┌───┬───┼───┼───┼───┼───┬───┐ ') ].						Transcript cr.].						3 to:5 do:[:i | Transcript show:' '.                   Transcript show: (letras at:i).                   Transcript show:'   │'. 						 1 to:7 do:[:j| Transcript show:' '.                                            Transcript show: (self at:i at:j) estado.                                            Transcript show:' │'].                        Transcript cr.							  i<5 ifTrue:[   Transcript show: ('     ├───┼───┼───┼───┼───┼───┼───┤ ')]									 ifFalse:[ Transcript show: ('     └───┴───┼───┼───┼───┼───┴───┘ ') ].                        Transcript cr].	6 to:7 do:[:i |Transcript show:' '.                   Transcript show: (letras at:i).  						 Transcript show:'           │'.						 3 to:5 do:[:j| Transcript show:' '.                                   Transcript show: (self at:i at:j) estado.                                   Transcript show:' │'].                   Transcript cr.						i<7 ifTrue:[ Transcript show: ('             ├───┼───┼───┤ ')]							 ifFalse:[ Transcript show: ('             └───┴───┴───┘ ') ].						Transcript cr.].! !!TableroCruz methodsFor: 'loading' stamp: 'Anonymous 10/30/2021 18:12'!cargaTablero
	"metodo que carga el tableroCruz"	self cant_fichas:  32.	self puntajeInicial: 32.	1 to: 7 do: [:i| 		1 to:7 do:[:j |			self at:i at:j put: Ficha new] ]."carga fichas"	1 to: 2 do:[:i | 		1 to:2 do:[:j| 			(self at:i at:j) estado:' '.]. "cuadrante izquierdo superior que no se ocupa"		3 to:5 do:[:j| 			(self at:i at:j) estado:'◙'.]. "franja del medio superior que si se ocupa"		6 to:7 do:[:j| 			(self at:i at:j) estado:' '.].]."cuadrante derecho superior que no se ocupa"	3 to: 5 do:[:i | 		1 to:7 do:[:j| 			(self at:i at:j) estado:'◙'.].]."franja alargada del medio que si se ocupa"	6 to: 7 do:[:i | 		1 to:2 do:[:j| 			(self at:i at:j) estado:' '.]."cuadrante izquierdo inferior que no se ocupa"		3 to:5 do:[:j| 			(self at:i at:j) estado:'◙'.]."franja del medio inferior que si se ocupa"		6 to:7 do:[:j| 			(self at:i at:j) estado:' '.].]."cuadrante izquierdo inferior que no se ocupa"	(self at:4 at:4) estado: 'o'.	
	
	! !Tablero subclass: #TableroCuadrado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Senku7'!!TableroCuadrado methodsFor: 'printing' stamp: 'Anonymous 10/30/2021 17:19'!mostrarTablero
	"metodo que carga el tablero cuadrado"
	|letras|
	Transcript clear.
	letras:=('ABCDEFG').
	Transcript cr.
	Transcript show: ('       A   B   C   D   E   F   G    ').
	Transcript cr.
	Transcript cr.
	Transcript show: ('     ┌───┬───┬───┬───┬───┬───┬───┐ ').
	Transcript cr.
	1 to: 7 do:[:i |  Transcript show:' '.
                      Transcript show: (letras at:i).
                      Transcript show:'   │'.
                      1 to:7 do:[:j| Transcript show:' '.
                                            Transcript show: (self at:i at:j) estado.
                                            Transcript show:' │'].
                        Transcript cr.							  i<7 ifTrue:[  Transcript show: ('     ├───┼───┼───┼───┼───┼───┼───┤ ')]									 ifFalse:[ Transcript show: ('     └───┴───┴───┴───┴───┴───┴───┘ ') ].
                        Transcript cr].
	
	! !!TableroCuadrado methodsFor: 'loading' stamp: 'Anonymous 10/30/2021 18:13'!cargaTablero
	"metodo que carga el tableroCuadrado"
	self cant_fichas: 48.	self puntajeInicial: 48.
	1 to: 7 do: [:i| 
		1 to:7 do:[:j |
		 self at:i at:j put: Ficha new]  ].
	1 to: 7 do:[:i | 1 to:7 do:[:j| (self at:i at:j) estado:'◙'.].].
	(self at:4 at:4) estado: 'o'.
	
	! !Tablero subclass: #TableroDiamante	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Senku7'!!TableroDiamante methodsFor: 'printing' stamp: 'Anonymous 10/30/2021 17:52'!mostrarTablero	"metodo que muestra el tablero diamante"	|letras|	Transcript clear.	letras:=('ABCDEFG').	Transcript cr.	Transcript show: ('         A   B   C   D   E   F   G   ').	Transcript cr.	Transcript cr.	Transcript show:('               ┌───┬───┬───┐ ').	Transcript cr.	Transcript show:' '.   Transcript show: 'A'.  	Transcript show:   '             │'.	3 to:5 do:[:j| Transcript show:' '.                  Transcript show: (self at:1 at:j) estado.                  Transcript show:' │'.].   Transcript cr.	Transcript show:('           ┌───┼───┼───┼───┼───┐ ').	Transcript cr.	Transcript show:' '.   Transcript show: 'B'.  	Transcript show:   '         │'.	2 to:6 do:[:j| Transcript show:' '.                  Transcript show: (self at:2 at:j) estado.                  Transcript show:' │'.].   Transcript cr.	Transcript show:('       ┌───┼───┼───┼───┼───┼───┼───┐ ').	Transcript cr.	3 to: 5 do:[:i | Transcript show:' '.                    Transcript show: (letras at:i).                    Transcript show: '     │'.                    1 to:7 do:[:j| Transcript show:' '.                                    Transcript show: (self at:i at:j) estado.                                    Transcript show:' │'].                    Transcript cr.						  i<5 ifTrue: [ Transcript show: ('       ├───┼───┼───┼───┼───┼───┼───┤ ')]					     		ifFalse:[ Transcript show: ('       └───┼───┼───┼───┼───┼───┼───┘ ') ].                    Transcript cr].	Transcript show:' '.   Transcript show: 'F'.  	Transcript show:   '         │'.	2 to:6 do:[:j| Transcript show:' '.                   Transcript show: (self at:6 at:j) estado.                   Transcript show:' │'.].   Transcript cr.	Transcript show:('           └───┼───┼───┼───┼───┘ ').	Transcript cr.	Transcript show:' '.   Transcript show: 'G'.  	Transcript show:   '             │'.	3 to:5 do:[:j|  Transcript show:' '.                   Transcript show: (self at:7 at:j) estado.                   Transcript show:' │'.].   Transcript cr.	Transcript show:('               └───┴───┴───┘ ').	Transcript cr.	! !!TableroDiamante methodsFor: 'loading' stamp: 'Anonymous 10/30/2021 18:13'!cargaTablero
	"metodo que carga el tableroDiamante"	|fila1_7 fila2_6 fila3_5|	self cant_fichas:  36.	self puntajeInicial: 36.	fila1_7:=#(1 7).	fila2_6:=#(2 6).	fila3_5:=#(3 4 5).	1 to: 7 do: [:i| 		1 to:7 do:[:j |			self at:i at:j put: Ficha new] ]."carga fichas"	fila1_7 do:[:i| 		1 to:2 do:[:j | (self at:i at:j) estado:' '].		3 to:5 do:[:j | (self at:i at:j) estado:'◙'].		6 to:7 do:[:j | (self at:i at:j) estado:' ']].	fila2_6 do:[:i| 		(self at:i at:1) estado:' '.		2 to:6 do:[:j | (self at:i at:j) estado:'◙'].		(self at:i at:7) estado:' '].	fila3_5 do:[:i| 1 to:7 do:[:j | (self at:i at:j) estado:'◙'].]."franja alargada del medio que si se ocupa"	(self at:4 at:4) estado: 'o'.! !